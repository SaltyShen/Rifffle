{"version":3,"sources":["Component/SearchBar/SearchBar.js","logo.svg","Component/User/User.js","Component/Navbar/Navbar.js","Component/Buttons/PlayButton.js","Component/Buttons/ForwardButton.js","Component/Buttons/BackButton.js","Component/ProgBar/ProgBar.js","Component/Player/Player.js","Pages/Playlist.js","Component/Track/Track.js","Pages/RecentlyPlayed.js","Pages/PlayerPane.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","className","type","placeholder","Component","User","props","state","display_name","email","href","id","followers","profile_pic","showMenu","renderMenu","bind","this","getUserData","$","ajax","url","headers","token","success","data","setState","total","images","product","prevState","onClick","style","backgroundImage","Navbar","src","logo","alt","PlayButton","playToggle","play","pause","dataType","contentType","error","console","log","name","ForwardButton","next","BackButton","prev","ProgBar","progress","timeValue","minutes","Math","floor","seconds","toFixed","end","duration_ms","begin","progress_ms","getDurationValue","position","height","width","margin","borderRadius","background","Player","item","artists","is_playing","getPlayerDataContext","setInterval","beforeSend","xhr","setRequestHeader","lastElement","length","map","artist","i","album","textAlign","fontWeight","fontSize","setArtists","Playlists","fetchPlaylists","playlists","items","playlist","index","Card","CardHeader","avatar","Avatar","aria-label","action","IconButton","title","subheader","owner","CardMedia","image","CardContent","Typography","variant","color","component","description","getCurrentState","Track","track_cover_art_url","preview_url","uri","playTrack","getTrackData","JSON","stringify","trackhref","cors","RecentlyPlayed","recents","getPrevData","track","getEachPrev","PlayerPane","device_id","initPlayer","window","onSpotifyWebPlaybackSDKReady","player","Spotify","getOAuthToken","cb","addListener","message","setDevicePlayBack","connect","then","Playlist","scopes","hash","location","substring","split","reduce","initial","parts","decodeURIComponent","App","cookieToken","checkCookie","_token","access_token","document","cookie","match","RegExp","paddingTop","paddingLeft","icon","font","marginTop","marginLeft","join","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","response","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.549e89b0.chunk.js","sourcesContent":[" import React, {Component} from 'react';\r\n import './searchbar.css'\r\n\r\n class SearchBar extends Component {\r\n    render(){\r\n        return(\r\n            <input className=\"search-bar\" type='text' placeholder=\"Search A Session\"></input>\r\n        )\r\n    }\r\n } \r\n export default SearchBar;","export default __webpack_public_path__ + \"static/media/logo.2a18dad3.svg\";","import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\nimport './User.css';\r\n\r\n/*\r\n\r\n    Taken Props:\r\n        token: for cors jquery call\r\n\r\n    To Do:\r\n    implement a good framework\r\n    Will most likely be put into navbar with a drop down box that lets you see your profile and then go into a settings page if button \"settings\" is clicked.\r\n\r\n*/\r\n\r\nclass User extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            display_name: null,\r\n            email: null,\r\n            href: null, \r\n            id: null,\r\n            followers: null,\r\n            profile_pic: null,\r\n            showMenu: false\r\n        };\r\n        this.renderMenu = this.renderMenu.bind(this);\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.getUserData();\r\n    };\r\n\r\n    getUserData(){\r\n        $.ajax({\r\n            url: \"https://api.spotify.com/v1/me/\",\r\n            'Content-Type' : 'application/json',\r\n            headers: {\r\n                'Authorization' : 'Bearer ' + this.props.token\r\n            },\r\n            type: \"GET\",\r\n            success: (data) => {        \r\n                this.setState({\r\n                    email: data.email,\r\n                    display_name: data.display_name,\r\n                    href: data.href,\r\n                    followers: data.followers.total,\r\n                    id: data.id,\r\n                    profile_pic: data.images[0].url,\r\n                    product: data.product\r\n                });\r\n            }\r\n        })\r\n    };\r\n\r\n    renderMenu(){\r\n        this.setState(prevState => ({\r\n            showMenu: !prevState.showMenu\r\n            })\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"user-pane\">\r\n                <button className=\"user-btn\"\r\n                    onClick={this.renderMenu}\r\n                    style={{\r\n                        backgroundImage:`url(${this.state.profile_pic})`\r\n                    }}>\r\n                </button>\r\n            {\r\n                this.state.showMenu ? (\r\n                    <div className=\"drop-menu\">\r\n                        <p>{this.state.id}</p>\r\n                        <p>{this.state.product}</p>\r\n                        <p>{this.state.followers}</p>\r\n                    </div>\r\n                ) : (\r\n                    null\r\n                )\r\n            }\r\n            </div>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default User;","import React from 'react';\r\n\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nimport logo from '../../logo.svg'\r\nimport './navbar.css'\r\nimport User from '../User/User'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return(\r\n        \r\n            <nav className=\"nav-wrapper\">\r\n                \r\n                <img src={logo} className=\"nav-logo\" alt=\"logo\"></img>\r\n                <SearchBar/>\r\n                <User token={props.token}/>\r\n            </nav>\r\n            \r\n\r\n    )\r\n}\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\nimport './playbutton.css';\r\n/* \r\n    props: did not destructure, only one prop token for ajax call.\r\n*/\r\nclass PlayButton extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            token: this.props.token,\r\n            playToggle: this.props.playToggle\r\n        };\r\n        this.play = this.play.bind(this)\r\n        this.pause = this.pause.bind(this)\r\n    }\r\n    play(){\r\n        $.ajax({\r\n            url: \"https://api.spotify.com/v1/me/player/play\",\r\n            type: \"PUT\",\r\n            headers: {\r\n                'Authorization' : 'Bearer ' + this.props.token\r\n            },\r\n            dataType: \"json\",\r\n            contentType: \"application/json\",\r\n            success: () => {\r\n                this.setState(prevState => ({\r\n                    playToggle: !prevState.playToggle\r\n                    })\r\n                );\r\n            },\r\n            error: () => {\r\n                console.log(\"something went wrong play\");\r\n            }\r\n        });\r\n    }\r\n\r\n    pause(){\r\n        $.ajax({\r\n            url: \"https://api.spotify.com/v1/me/player/pause\",\r\n            type: \"PUT\",\r\n            headers: {\r\n                'Authorization' : 'Bearer ' + this.state.token\r\n            },\r\n            success: () => {\r\n                \r\n                this.setState(prevState => ({\r\n                    playToggle: !prevState.playToggle\r\n                    })\r\n                );\r\n            },\r\n            error: () => {\r\n                console.log(\"something went wrong pause\");\r\n            }\r\n        });   \r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div className='play-button-container'>\r\n            {\r\n                this.state.playToggle ? (\r\n                    <button className='play-button' key={this.state.playToggle} onClick={this.pause}>\r\n                        <ion-icon name=\"stop-circle-outline\"></ion-icon>\r\n                    </button>\r\n                ) : (\r\n                    <button className='play-button' key={this.state.playToggle} onClick={this.play}>\r\n                        <ion-icon name=\"play-circle-outline\"></ion-icon>\r\n                    </button>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PlayButton;\r\n","import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass ForwardButton extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            token: this.props.token\r\n        }\r\n        this.next = this.next.bind(this);\r\n    }\r\n\r\n    next(){\r\n        $.ajax({\r\n            url: \"https://api.spotify.com/v1/me/player/next\",\r\n            type: \"POST\",\r\n            headers: {\r\n                'Authorization' : 'Bearer ' + this.props.token\r\n            },\r\n            dataType: \"json\",\r\n            contentType: \"application/json\",\r\n            success: () => {\r\n                console.log('next');\r\n            },\r\n            error: () => {\r\n                console.log(\"something went wrong play\");\r\n            }\r\n        });   \r\n    }\r\n    \r\n    \r\n\r\n    render(){\r\n\r\n\r\n        return(\r\n                    <button className='play-button' onClick={this.next}>\r\n                        <ion-icon name=\"play-forward-circle-outline\"></ion-icon>\r\n                    </button>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ForwardButton;\r\n","import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass BackButton extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            token: this.props.token\r\n        }\r\n        this.prev = this.prev.bind(this);\r\n    }\r\n\r\n    prev(){\r\n        $.ajax({\r\n            url: \"https://api.spotify.com/v1/me/player/previous\",\r\n            type: \"POST\",\r\n            headers: {\r\n                'Authorization' : 'Bearer ' + this.props.token\r\n            },\r\n            dataType: \"json\",\r\n            contentType: \"application/json\",\r\n            success: () => {\r\n                console.log('back');\r\n            },\r\n            error: () => {\r\n                console.log(\"something went wrong play\");\r\n            }\r\n        });   \r\n    }\r\n    \r\n    \r\n\r\n    render(){\r\n\r\n\r\n        return(\r\n                    <button className='play-button' onClick={this.prev}>\r\n                        <ion-icon name=\"play-back-circle-outline\"></ion-icon>\r\n                    </button>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BackButton;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport './progbar.css';\r\n\r\nclass ProgBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            progress: this.props.progress,\r\n            token: this.props.token\r\n        }\r\n    };\r\n\r\n    \r\n    getDurationValue(timeValue){\r\n        var minutes = Math.floor(timeValue /1000/60);\r\n        var seconds = (timeValue /1000%60).toFixed(0);\r\n        return minutes + \":\" + (seconds <10 ? '0' : '') + seconds;\r\n    }\r\n    getLeftValue(){\r\n        var end = this.props.duration_ms;\r\n        var begin = this.props.progress_ms;\r\n        console.log(Math.floor((begin/end) * 100));\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"prog-bar-container\">\r\n                <div className=\"time-stamp\">{this.getDurationValue(this.props.progress_ms)}</div>\r\n                    <div className=\"progress-bar\">\r\n                        <div className=\"prog-bar-scroll\" style={{\r\n                            position: 'absolute', \r\n                            height:'13px', \r\n                            width: (this.props.progress_ms/1000)/(this.props.duration_ms/1000) * 44 + \"vw\",\r\n                            margin: \"5px 5px 0 6px\", \r\n                            borderRadius:\"50px\", \r\n                            background:'rgb(30,215,96)'\r\n                            }}>\r\n                        </div>\r\n                    </div>\r\n                <div className=\"time-stamp\">{this.getDurationValue(this.props.duration_ms)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProgBar;","import React, { Component } from 'react';\r\nimport $ from \"jquery\";\r\nimport PlayButton from \"../Buttons/PlayButton\"\r\nimport ForwardButton from \"../Buttons/ForwardButton\"\r\nimport BackButton from \"../Buttons/BackButton\"\r\nimport './player.css'\r\nimport ProgBar from '../ProgBar/ProgBar';\r\n/* \r\nThis is the main interface for music control.\r\nchild components are: \r\n  PlayButton\r\n  PauseButton\r\n  ForwardButton\r\n  PrevButton\r\n\r\n*/\r\nclass Player extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      token: this.props.token,\r\n      item: '',\r\n      artists: [],\r\n      progress_ms: '',\r\n      duration_ms: '',\r\n      is_playing: '',\r\n    }\r\n    this.getPlayerDataContext = this.getPlayerDataContext.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    setInterval( () => {\r\n      this.getPlayerDataContext();\r\n    },1000);\r\n\r\n  }\r\n\r\n  getPlayerDataContext(){\r\n    $.ajax({\r\n      url: \"https://api.spotify.com/v1/me/player/\",\r\n      type: \"GET\",\r\n      beforeSend: (xhr) => {\r\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.token);\r\n      },\r\n      success: (data) => {\r\n          if(!data){\r\n            console.log(\"Loading...\")\r\n          }\r\n          else{\r\n\r\n            console.log(data);\r\n            this.setState({\r\n              item: data.item,\r\n              artists: data.item.artists,\r\n              is_playing: data.is_playing,\r\n              progress_ms: data.progress_ms,\r\n              duration_ms: data.item.duration_ms\r\n            });\r\n            console.log(this.state.artists)\r\n            //console.log(`progress: ${this.state.progress_ms} /n duration: ${this.state.duration_ms}`);\r\n          }\r\n      }\r\n    });\r\n  }\r\n\r\n  getPlayerDataCurrent(){\r\n    $.ajax({\r\n      url: \"https://api.spotify.com/v1/me/player/currently-playing\",\r\n      type: \"GET\",\r\n      beforeSend: (xhr) => {\r\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.token);\r\n      },\r\n      success: (data) => {\r\n        \r\n        if(data == null){\r\n          console.log(\"nothing currently playing, try playing something!\")\r\n        }\r\n        else{\r\n          this.setState({\r\n            item: data.item,\r\n            is_playing: data.is_playing,\r\n            progress_ms: data.progress_ms\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  setArtists(){\r\n    var lastElement = this.state.artists.length;\r\n    var artists = this.state.artists.map((artist, i) => {\r\n      if (lastElement === i + 1){\r\n        return(<b key={i}>{artist['name']}</b>)\r\n      }\r\n      else {\r\n        console.log(artist)\r\n        return(<b key={i}>{artist['name'] + \", \"}</b>)\r\n      }\r\n    });\r\n    return artists;\r\n  }\r\n\r\n  render(){\r\n    // Rendering will cause an error pre-flight\r\n    // ternary operator to handle null error\r\n    // Need to add Buttons and controls to connect to playbacksdk\r\n    //var coverArtURL = this.state.item.album.images[1].url;\r\n\r\n    const player = (this.state.item) ? (\r\n      \r\n      <div className=\"player-interface\">\r\n\r\n        <div className=\"cover-art\" \r\n          style={{\r\n            backgroundImage: `url(${this.state.item.album.images[1].url})`,\r\n            height:this.state.item.album.images[1].height,\r\n            width:this.state.item.album.images[1].width\r\n          }}>\r\n          \r\n        </div>\r\n        <div className=\"control-pane\">\r\n          <div className=\"details-pane\">\r\n            <p className=\"track-name\" style={{textAlign: \"center\", fontWeight:\"700\", fontSize:\"20px\"}}>{this.state.item.name}</p>\r\n\r\n            <div className=\"artists-list\">{this.setArtists()}</div>\r\n            <div className=\"track-album-name\" style={{textAlign: \"center\"}}>{this.state.item.album.name}</div>\r\n          </div>\r\n          <div className=\"control-panel\">\r\n            <div className=\"control-cluster\">\r\n              <BackButton token={this.state.token}/>\r\n              <PlayButton token={this.state.token} playToggle={this.state.is_playing}/>\r\n              <ForwardButton token={this.state.token}/>\r\n            </div>\r\n              <ProgBar progress_ms={this.state.progress_ms} \r\n                       duration_ms={this.state.duration_ms}\r\n                       />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    ) : (\r\n\r\n      <div className=\"player-interface\">\r\n        Loading...\r\n      </div>\r\n\r\n    )\r\n\r\n    return (player);\r\n  }\r\n}\r\n\r\nexport default Player;","import React, {Component} from 'react';\r\n//import PlayListTrackList from '../PlayListTrackList/PlayListTrackList'\r\nimport $ from \"jquery\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/*\r\n\r\n    Taken Props: \r\n    token: for Cors ajax call\r\n\r\n    To Do:\r\n    Create an actual framework for this component with PlayListTrackList\r\n    Will probably be rendered as a card with a drop down list \r\n\r\n*/\r\n\r\nclass Playlists extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            token: '',\r\n            playlists : ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetchPlaylists();\r\n    }\r\n\r\n    fetchPlaylists = () => {\r\n        // When the playlist tab is clicked, it will call an\r\n        // ajax call that gets playlists. \r\n        $.ajax({\r\n            url: \"https://api.spotify.com/v1/me/playlists\",\r\n            type: \"GET\",\r\n            beforeSend: (xhr) => {\r\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.props.token);\r\n            },\r\n            success: (data) => {\r\n                    this.setState({\r\n                        token: this.props.token,\r\n                        playlists: data.items\r\n                    })\r\n                    //console.log(data.items);\r\n\r\n            }\r\n        });\r\n    }\r\n    \r\n    //Method to display yourplaylists.\r\n    //May need a ComponentWillUpdate method to call this.\r\n    //Need to assign a key value per every playlist render.\r\n    getCurrentState(){\r\n        const playlists = this.state.playlists ? (\r\n            this.state.playlists.map(function (playlist, index){\r\n                return(\r\n                    //name of playlist\r\n                    //playlist image\r\n                    //maybe playlist creator\r\n\r\n                    <Card key={index}>\r\n                    <CardHeader\r\n                        avatar={\r\n                        <Avatar aria-label=\"recipe\">\r\n                            <img href={playlist.images[0].url} alt=\"playlist art\"/>\r\n                        </Avatar>\r\n                        }\r\n                        action={\r\n                        <IconButton aria-label=\"settings\">\r\n                        </IconButton>\r\n                        }\r\n                        title={playlist.name}\r\n                        subheader={playlist.owner.display_name}\r\n                    />\r\n                    <CardMedia\r\n                        image={playlist.images[0].url}\r\n                        title={playlist.name}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {playlist.description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                    //<PlayListTrackList token={token} trackhref={playlist.tracks.href}></PlayListTrackList>\r\n                )\r\n        })\r\n    ) : (\r\n            \r\n                <div> No Playlists Found! </div>\r\n            \r\n        )\r\n        return playlists;\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Playlists</h1>\r\n                <ul>\r\n                    {this.getCurrentState(this.state.token)}\r\n                </ul>\r\n            </div>\r\n           )\r\n\r\n    }\r\n}\r\n\r\nexport default Playlists;","import React, {Component} from 'react';\r\nimport './track.css'\r\nimport $ from 'jquery';\r\n/* \r\n\r\n    Takes Props:\r\n    token: Cors call requires the bearers token\r\n    trackhref: FULL href to the track ID \r\n\r\n    To Do:\r\n    Implement a play button that sends the song to current play state.\r\n    Make this component prettier.\r\n    \r\n  */\r\nclass Track extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            title: '',\r\n            artist: [],\r\n            track_cover_art_url: '',\r\n            preview_url: '',\r\n            uri: ''\r\n        }\r\n        this.playTrack = this.playTrack.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getTrackData();\r\n    }\r\n    \r\n    playTrack() {\r\n        $.ajax({\r\n            url: 'https://api.spotify.com/v1/me/player/play',\r\n            type: 'PUT',\r\n            headers: {\r\n              'Authorization': 'Bearer ' + this.props.token\r\n            },\r\n            dataType: \"json\",\r\n            contentType: \"application/json\",\r\n            data: JSON.stringify({\r\n              \"uris\": [`${this.state.uri}`]\r\n            }),\r\n            success: (data) => {\r\n                console.log(`success: ${data}`)\r\n            },\r\n            error: (data) =>{\r\n                console.log(data);\r\n            }\r\n          });\r\n    }\r\n\r\n    //AJAX call to get data from spotify API with cors\r\n    getTrackData() {\r\n        $.ajax({\r\n        url: this.props.trackhref,\r\n        type: \"GET\",\r\n        cors: true,\r\n        contentType:'application/json',\r\n        beforeSend: (xhr) => {\r\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.props.token);\r\n        },\r\n            success: (data) => {\r\n                //log for diagnostic\r\n                //console.log(data);\r\n                this.setState({\r\n                    title: data.name,\r\n                    artist: data.artists,\r\n                    track_cover_art_url: data.album.images[1].url,\r\n                    preview_url: data.preview_url,\r\n                    duration_ms: data.duration_ms,\r\n                    uri: data.uri\r\n                })\r\n            }\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        const lastElement = this.state.artist.length;\r\n        var artists = this.state.artist.map(function(artist, i){\r\n            if (lastElement === i + 1){\r\n                return(<b key={i}>{artist['name']}</b>);\r\n            }\r\n            else{\r\n                return(<b key={i}>{artist['name'] + \", \"}</b>);\r\n            }\r\n        });\r\n\r\n        return(\r\n            <li className=\"track\">\r\n                    <img className=\"album-art\" \r\n                        src={this.state.track_cover_art_url} \r\n                        alt=\"album art\"\r\n                    >\r\n                    </img>\r\n                    <div className=\"descriptor\">\r\n                            <p className=\"song-title\">{this.state.title}</p>\r\n                            <p className=\"song-artist\">{artists}</p>\r\n                            <button className=\"play-button\" onClick={this.playTrack}>\r\n                            <ion-icon name=\"play-circle-outline\"></ion-icon>\r\n                            </button>\r\n                        </div>\r\n\r\n            </li>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Track\r\n\r\n/*  <div className=\"descriptor\">\r\n                            <p className=\"song-title\">{this.state.title}</p>\r\n                            <p className=\"song-artist\">{artists}</p>\r\n                            <button className=\"play-button\" onClick={this.playTrack}>Play</button>\r\n                        </div>\r\n                         */","import React, { Component } from 'react';\r\nimport Track from '../Component/Track/Track';\r\nimport $ from 'jquery';\r\n/*\r\n\r\n    Taken Props:\r\n    token: Cors call requires the bearers token\r\n\r\n    To Do:\r\n    Make this tab prettier.\r\n    Otherwise looking good.\r\n    \r\n*/\r\n\r\nclass RecentlyPlayed extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            recents: '',\r\n            }\r\n    }\r\n    componentDidMount(){\r\n        //console.log(this.props.token);\r\n        this.getPrevData();\r\n    }\r\n    //call API to get data and sets to state\r\n    getPrevData(){\r\n        $.ajax({\r\n            url: \"https://api.spotify.com/v1/me/player/recently-played?limit=50\",\r\n            type: \"GET\",\r\n            beforeSend: (xhr) => {\r\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.props.token);\r\n            },\r\n            success: (data) => {\r\n                this.setState({\r\n                    recents: data.items,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    // onHover={this.state.prev.track.preview_url}\r\n    getEachPrev(token){\r\n        const prevPlayed = this.state.recents ? (\r\n            this.state.recents.map(function(prev, index) {\r\n                return(                   \r\n                    <Track token={token} trackhref={prev.track.href} key={index}></Track>\r\n                )\r\n            })\r\n\r\n        ) : (\r\n            \r\n            <div> No Recent Replays </div>\r\n            \r\n        )\r\n\r\n        return prevPlayed;\r\n    };\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"recently-played\">\r\n                {// listStyleType is list marker. None for no list marker\r\n                }\r\n                <ul className=\"recently-played-ul\">\r\n                {this.getEachPrev(this.props.token)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecentlyPlayed;","import React, {Component} from 'react';\r\n\r\nimport $ from 'jquery';\r\nimport Navbar from '../Component/Navbar/Navbar.js'\r\nimport Player from '../Component/Player/Player'\r\nimport Playlists from './Playlist'\r\nimport RecentlyPlayed from './RecentlyPlayed'\r\n\r\n\r\n/* \r\n\r\n  To Do:\r\n  Create Launch Page implemented with login button.\r\n  Set up react dom router with nav.\r\n\r\n*/\r\n\r\nclass PlayerPane extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: this.props.token,\r\n      device_id: '',\r\n    }\r\n    this.initPlayer();\r\n  }\r\n\r\n  initPlayer(){\r\n    window.onSpotifyWebPlaybackSDKReady = () => {\r\n      const token = this.state.token;\r\n      const player = new window.Spotify.Player({\r\n        name: 'Riffle Player',\r\n        getOAuthToken: cb => { cb(token); }\r\n      });\r\n    \r\n      // Error handling\r\n      player.addListener('initialization_error', ({ message }) => { console.error(message); });\r\n      player.addListener('authentication_error', ({ message }) => { console.error(message); });\r\n      player.addListener('playback_error', ({ message }) => { console.error(message); });\r\n    \r\n      // Playback status updates\r\n      player.addListener('player_state_changed', state => { console.log(state); });\r\n    \r\n      // Ready\r\n      player.addListener('ready', ({ device_id }) => {\r\n        console.log('Ready with Device ID', device_id);\r\n        this.setState({\r\n          device_id: device_id,\r\n        });\r\n        this.setDevicePlayBack();\r\n      });\r\n    \r\n      // Not Ready\r\n      player.addListener('not_ready', ({ device_id }) => {\r\n        console.log('Device ID has gone offline', device_id);\r\n      });\r\n    \r\n      // Connect to the player!\r\n      player.connect().then(success =>{\r\n        if(success) {\r\n          console.log(\"Player connected!\")\r\n        }\r\n      });\r\n      \r\n      return player;\r\n    };\r\n  }\r\n\r\n  setDevicePlayBack(){\r\n    $.ajax({\r\n        url: \"https://api.spotify.com/v1/me/player\",\r\n        'Content-Type' : 'application/json',\r\n        headers: {\r\n            'Authorization' : 'Bearer ' + this.props.token\r\n        },\r\n        type: \"PUT\",\r\n        data: JSON.stringify({\r\n          \"device_ids\": [`${this.state.device_id}`]\r\n        }),\r\n        success: (data) => {        \r\n          console.log(\"successful: \" + data);\r\n        },\r\n        error: (data) => {\r\n          console.log(data)\r\n        }\r\n    })\r\n  };\r\n\r\n  render(){\r\n    \r\n    return (\r\n      \r\n          <div className=\"App\"\r\n               style = {{\r\n                 background: \"#212121\",\r\n                 width: \"100%\"\r\n               }}>\r\n            <header className=\"App-header\">\r\n            </header>\r\n              <Navbar token={this.state.token}/>\r\n              <Player token={this.state.token}/>\r\n              <RecentlyPlayed token={this.state.token}></RecentlyPlayed>\r\n              <Playlists token={this.state.token}></Playlists>\r\n              {\r\n                //<Player token={this.state.token}></Player>\r\n                //<User token={this.state.token}></User>\r\n                //<RecentlyPlayed token={this.state.token}></RecentlyPlayed>\r\n                //<Playlists token={this.state.token}></Playlists>\r\n              }\r\n          </div>\r\n    )\r\n  }\r\n}\r\nexport default PlayerPane;","import React, { Component } from 'react';\r\nimport PlayerPane from './Pages/PlayerPane.js'\r\nimport icon from './logo.svg';\r\n\r\nconst authEndpoint = 'https://accounts.spotify.com/authorize';\r\nconst clientId = \"9110bb9fbfc4422c85e722040cf63bc8\";\r\nconst redirectUri = \"https://shen-ui.github.io/Riffle/\";\r\n//const redirectUri = \"http://localhost:3000/Riffle\";\r\n\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-playback-state\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-private\",\r\n  \"user-read-email\",\r\n  \"streaming\"\r\n];\r\n\r\nconst hash = window.location.hash\r\n  .substring(1)\r\n  .split(\"&\")\r\n  .reduce(function(initial, item) {\r\n    if (item) {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n    }\r\n    return initial;\r\n  }, {});\r\nwindow.location.hash = \"\";\r\n//----------------CLASS------------------//\r\nexport default class App extends Component {\r\n    constructor(){\r\n      super();\r\n\r\n      var cookieToken = this.checkCookie();\r\n      //if cookie doesnt exist wait\r\n      if(cookieToken != null){\r\n          this.state = {\r\n            token: cookieToken,\r\n          }\r\n      }\r\n      //set a new cookie if it not created\r\n      else {\r\n        this.state = {\r\n          token: null\r\n        }\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Set token if cookie was empty\r\n      if(!this.state.token){\r\n        let _token = hash.access_token;\r\n        if (_token) {\r\n          // Set token\r\n          this.setState({\r\n            token: _token\r\n          });\r\n\r\n        //spotify tokens last 1 hour. \r\n        //will need to create something like a \"still listening\"\r\n        //pane to refresh token.\r\n        document.cookie=`token=${_token}`;\r\n        }\r\n      }//endif\r\n    }\r\n    // set Cookie: An expiration date (24 hours and token).\r\n    // checkCookie : Will return the token set in cookie if not expired. \r\n    checkCookie(){\r\n      var cookie = document.cookie;\r\n      var match = cookie.match(new RegExp('(^| )token=([^;]+)'));\r\n      if (match) {\r\n        return(match[2]);\r\n      }\r\n      else{\r\n        return null;\r\n      }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"login-pane\">\r\n              {!this.state.token && (\r\n              \r\n              <div className=\"loginbox\" \r\n                   style={{\r\n                     paddingTop:\"25vh\", \r\n                     paddingLeft:\"10vw\", \r\n                     height:\"100vh\",\r\n                     background: 'linear-gradient(35deg, #CCFFFF, #FFCCCC)'\r\n                  }}>\r\n    \r\n              <article>\r\n                <img src={icon} \r\n                    style={{\r\n                      height:\"40px\", \r\n                      width:\"40px\"\r\n                    }}\r\n                    alt=\"icon\"\r\n                />\r\n\r\n                <h4 style={{fontWeight:\"bold\" ,fontSize:\"20px\",font:\"Circular,arial\"}}>\r\n                  Riffle Collabrative Player \r\n                  \r\n                </h4>\r\n\r\n                <p style={{fontWeight:\"400\",font: \"Circular,ariel\",fontSize:\"17px\"}}> \r\n                  A fullstack project created by Peter Wang.<br/> \r\n                  Create memorable playlists with anyone.\r\n                  </p>\r\n\r\n                <p style={{fontWeight:\"100\", font:\"Circular,arial\", color:\"grey\"}}> \r\n                <ion-icon name=\"heart\"></ion-icon> Powered by Spotify.\r\n                  </p>\r\n                  \r\n                  \r\n              </article>\r\n              <a\r\n                className=\"btn\"\r\n                style={{marginTop:\"20px\", marginLeft: \"5%\", fontWeight:\"600\", borderRadius:\"25px\"}}\r\n                href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}>\r\n                Login with Spotify\r\n              </a>\r\n\r\n              <footer className=\"nav-down\">\r\n                <p className=\"footer-sig\">Developed to share by <b>Peter Wang</b></p>\r\n                <div>\r\n                  <a href=\"mailto:peterhuiwang1995@gmail.com\"><i className=\"material-icons\">email</i></a>\r\n                  <a href=\"https://www.linkedin.com/in/shenhwang/\"><i className=\"material-icons\">work</i></a>\r\n                  <a href=\"https://github.com/shen-ui\"><i className=\"material-icons\">code</i></a>\r\n                </div>\r\n              </footer>\r\n              </div>\r\n\r\n              )}\r\n\r\n              {this.state.token && (\r\n                <PlayerPane token={this.state.token}/>\r\n              )\r\n            }\r\n          </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}